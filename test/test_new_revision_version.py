# coding: utf-8

"""
    Talon.One API

    Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`   # noqa: E501

    The version of the OpenAPI document: 
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import talon_one
from talon_one.models.new_revision_version import NewRevisionVersion  # noqa: E501
from talon_one.rest import ApiException

class TestNewRevisionVersion(unittest.TestCase):
    """NewRevisionVersion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test NewRevisionVersion
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = talon_one.models.new_revision_version.NewRevisionVersion()  # noqa: E501
        if include_optional :
            return NewRevisionVersion(
                name = 'Summer promotions', 
                start_time = '2021-07-20T22:00Z', 
                end_time = '2021-09-22T22:00Z', 
                attributes = None, 
                description = 'Campaign for all summer 2021 promotions', 
                active_ruleset_id = 5, 
                tags = [
                    '0'
                    ], 
                coupon_settings = talon_one.models.code_generator_settings.CodeGeneratorSettings(
                    valid_characters = [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 
                    coupon_pattern = 'SUMMER-####-####', ), 
                referral_settings = talon_one.models.code_generator_settings.CodeGeneratorSettings(
                    valid_characters = [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9], 
                    coupon_pattern = 'SUMMER-####-####', ), 
                limits = [
                    talon_one.models.limit_config.LimitConfig(
                        action = 'createCoupon', 
                        limit = 1000.0, 
                        period = 'yearly', 
                        entities = [Coupon], )
                    ], 
                features = [
                    'coupons'
                    ]
            )
        else :
            return NewRevisionVersion(
        )

    def testNewRevisionVersion(self):
        """Test NewRevisionVersion"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
