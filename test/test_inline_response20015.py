# coding: utf-8

"""
    Talon.One API

    Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you are reading this page at `https://mycompany.talon.one/docs/api/`, the URL for the [updateCustomerSession](https://docs.talon.one/integration-api/#operation/updateCustomerSessionV2) endpoint is `https://mycompany.talon.one/v2/customer_sessions/{Id}`   # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import talon_one
from talon_one.models.inline_response20015 import InlineResponse20015  # noqa: E501
from talon_one.rest import ApiException

class TestInlineResponse20015(unittest.TestCase):
    """InlineResponse20015 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test InlineResponse20015
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = talon_one.models.inline_response20015.InlineResponse20015()  # noqa: E501
        if include_optional :
            return InlineResponse20015(
                total_result_size = 56, 
                data = [
                    talon_one.models.campaign_analytics.CampaignAnalytics(
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        campaign_revenue = 1.337, 
                        total_campaign_revenue = 1.337, 
                        campaign_refund = 1.337, 
                        total_campaign_refund = 1.337, 
                        campaign_discount_costs = 1.337, 
                        total_campaign_discount_costs = 1.337, 
                        campaign_refunded_discounts = 1.337, 
                        total_campaign_refunded_discounts = 1.337, 
                        campaign_free_items = 56, 
                        total_campaign_free_items = 56, 
                        coupon_redemptions = 56, 
                        total_coupon_redemptions = 56, 
                        coupon_rolledback_redemptions = 56, 
                        total_coupon_rolledback_redemptions = 56, 
                        referral_redemptions = 56, 
                        total_referral_redemptions = 56, 
                        coupons_created = 56, 
                        total_coupons_created = 56, 
                        referrals_created = 56, 
                        total_referrals_created = 56, 
                        added_loyalty_points = 1.337, 
                        total_added_loyalty_points = 1.337, 
                        deducted_loyalty_points = 1.337, 
                        total_deducted_loyalty_points = 1.337, )
                    ]
            )
        else :
            return InlineResponse20015(
                total_result_size = 56,
                data = [
                    talon_one.models.campaign_analytics.CampaignAnalytics(
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        campaign_revenue = 1.337, 
                        total_campaign_revenue = 1.337, 
                        campaign_refund = 1.337, 
                        total_campaign_refund = 1.337, 
                        campaign_discount_costs = 1.337, 
                        total_campaign_discount_costs = 1.337, 
                        campaign_refunded_discounts = 1.337, 
                        total_campaign_refunded_discounts = 1.337, 
                        campaign_free_items = 56, 
                        total_campaign_free_items = 56, 
                        coupon_redemptions = 56, 
                        total_coupon_redemptions = 56, 
                        coupon_rolledback_redemptions = 56, 
                        total_coupon_rolledback_redemptions = 56, 
                        referral_redemptions = 56, 
                        total_referral_redemptions = 56, 
                        coupons_created = 56, 
                        total_coupons_created = 56, 
                        referrals_created = 56, 
                        total_referrals_created = 56, 
                        added_loyalty_points = 1.337, 
                        total_added_loyalty_points = 1.337, 
                        deducted_loyalty_points = 1.337, 
                        total_deducted_loyalty_points = 1.337, )
                    ],
        )

    def testInlineResponse20015(self):
        """Test InlineResponse20015"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
