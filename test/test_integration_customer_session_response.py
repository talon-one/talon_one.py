# coding: utf-8

"""
    Talon.One API

    Use the Talon.One API to integrate with your application and to manage applications and campaigns:  - Use the operations in the [Integration API section](#integration-api) are used to integrate with our platform - Use the operation in the [Management API section](#management-api) to manage applications and campaigns.  ## Determining the base URL of the endpoints  The API is available at the same hostname as your Campaign Manager deployment. For example, if you access the Campaign Manager at `https://yourbaseurl.talon.one/`, the URL for the [updateCustomerSessionV2](https://docs.talon.one/integration-api#operation/updateCustomerSessionV2) endpoint is `https://yourbaseurl.talon.one/v2/customer_sessions/{Id}`   # noqa: E501

    The version of the OpenAPI document: 
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import talon_one
from talon_one.models.integration_customer_session_response import IntegrationCustomerSessionResponse  # noqa: E501
from talon_one.rest import ApiException

class TestIntegrationCustomerSessionResponse(unittest.TestCase):
    """IntegrationCustomerSessionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IntegrationCustomerSessionResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = talon_one.models.integration_customer_session_response.IntegrationCustomerSessionResponse()  # noqa: E501
        if include_optional :
            return IntegrationCustomerSessionResponse(
                customer_session = talon_one.models.customer_session_v2.CustomerSessionV2(
                    id = 6, 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    integration_id = 'URNGV8294NV', 
                    application_id = 322, 
                    profile_id = 'URNGV8294NV', 
                    store_integration_id = 'STORE-001', 
                    evaluable_campaign_ids = [10, 12], 
                    coupon_codes = [XMAS-20-2021], 
                    referral_code = 'NT2K54D9', 
                    loyalty_cards = [loyalty-card-1], 
                    state = 'open', 
                    cart_items = [
                        talon_one.models.cart_item.CartItem(
                            name = 'Air Glide', 
                            sku = 'SKU1241028', 
                            quantity = 1, 
                            returned_quantity = 1, 
                            remaining_quantity = 1, 
                            price = 99.99, 
                            category = 'shoes', 
                            product = talon_one.models.product.Product(
                                name = 'sample_product', ), 
                            weight = 1130.0, 
                            height = 1.337, 
                            width = 1.337, 
                            length = 1.337, 
                            position = 1.337, 
                            attributes = {"image":"11.jpeg","material":"leather"}, 
                            additional_costs = {"shipping":{"price":9}}, 
                            catalog_item_id = 56, )
                        ], 
                    additional_costs = {"shipping":{"price":9}}, 
                    identifiers = [91.11.156.141], 
                    attributes = {"ShippingCity":"Berlin"}, 
                    first_session = True, 
                    total = 119.99, 
                    cart_item_total = 99.99, 
                    additional_cost_total = 20.0, 
                    updated = '2020-02-08T14:15:22Z', ), 
                effects = [
                    talon_one.models.effect.Effect(
                        campaign_id = 244, 
                        ruleset_id = 73, 
                        rule_index = 2, 
                        rule_name = 'Give 20% discount', 
                        effect_type = 'rejectCoupon', 
                        triggered_by_coupon = 4928, 
                        triggered_for_catalog_item = 786, 
                        condition_index = 786, 
                        evaluation_group_id = 3, 
                        evaluation_group_mode = 'stackable', 
                        props = talon_one.models.effect_props.EffectProps(), )
                    ]
            )
        else :
            return IntegrationCustomerSessionResponse(
        )

    def testIntegrationCustomerSessionResponse(self):
        """Test IntegrationCustomerSessionResponse"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
